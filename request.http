@baseUrl = http://localhost:3000


#######################
### AUTHENTIFICATION
#######################

### Login ADMIN
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "Admin@1234"
}

### Copier le token
@adminToken = PASTE_TOKEN_HERE

### Login GERANT 1
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "gerant1@example.com",
  "password": "Gerant@1234"
}

### Copier le token
@gerant1Token = PASTE_TOKEN_HERE

### Login GERANT 2
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "gerant2@example.com",
  "password": "Gerant@1234"
}

### Copier le token
@gerant2Token = PASTE_TOKEN_HERE

### Login EMPLOYE 1
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "employe1@example.com",
  "password": "Employe@1234"
}

### Copier le token
@employe1Token = PASTE_TOKEN_HERE

### Login EMPLOYE 2
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "employe2@example.com",
  "password": "Employe@1234"
}

### Copier le token
@employe2Token = PASTE_TOKEN_HERE

### Login CLIENT 1
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "client1@example.com",
  "password": "12Az!3456"
}

### Copier le token
@client1Token = PASTE_TOKEN_HERE

### Login CLIENT 2
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "client2@example.com",
  "password": "12Az!3456"
}

### Copier le token
@client2Token = PASTE_TOKEN_HERE


#######################
### USERS
#######################

### Liste des utilisateurs (ADMIN)
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}

### Liste des utilisateurs (GERANT 1)
GET {{baseUrl}}/users
Authorization: Bearer {{gerant1Token}}

### Liste des utilisateurs (EMPLOYE) => erreur 403
GET {{baseUrl}}/users
Authorization: Bearer {{employe1Token}}

### Création d'un nouvel utilisateur (ouvert à tous)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "nom": "Nouveau Client Quatre",
  "email": "client4@example.com",
  "motDePasse": "Client@2023!",
  "role": "CLIENT",
  "dateNaissance": "1990-01-01"
}

### Création d'un utilisateur avec un mot de passe trop faible => erreur 400
POST {{baseUrl}}/users
Content-Type: application/json

{
  "nom": "Client Faible",
  "email": "clientfaible@example.com",
  "motDePasse": "123",
  "role": "CLIENT"
}

### Récupérer un utilisateur spécifique (ADMIN)
GET {{baseUrl}}/users/1
Authorization: Bearer {{adminToken}}

### Modifier un utilisateur (ADMIN ou GERANT) => ex: user #4
PATCH {{baseUrl}}/users/4
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "nom": "Client 4 Modifié"
}

### Supprimer un utilisateur (ADMIN seulement ou soi-même) => user #4
DELETE {{baseUrl}}/users/4
Authorization: Bearer {{adminToken}}


#######################
### RESTAURANTS
#######################

### Liste publique des restaurants
GET {{baseUrl}}/restaurants

### Obtenir un restaurant (ex: ID 1)
GET {{baseUrl}}/restaurants/1

### Créer un restaurant (ADMIN)
POST {{baseUrl}}/restaurants
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "nom": "Burger Palace Test",
  "adresse": "101 rue du Test",
  "telephone": "0123456000",
  "heureOuverture": "09:00:00",
  "heureFermeture": "22:00:00",
  "idGerant": 2
}

### Créer un restaurant (GERANT) => ok
POST {{baseUrl}}/restaurants
Authorization: Bearer {{gerant1Token}}
Content-Type: application/json

{
  "nom": "Chez Gerant 1",
  "adresse": "22 rue du Gérant",
  "telephone": "0987654321",
  "heureOuverture": "10:00:00",
  "heureFermeture": "23:00:00",
  "idGerant": 1
}

### Créer un restaurant (CLIENT) => erreur 403
POST {{baseUrl}}/restaurants
Authorization: Bearer {{client1Token}}
Content-Type: application/json

{
  "nom": "Client Restaurant",
  "adresse": "33 rue du Client",
  "telephone": "0111222333",
  "heureOuverture": "08:00:00",
  "heureFermeture": "20:00:00",
  "idGerant": 2
}

### Mettre à jour un restaurant (ex: ID 2) (ADMIN)
PUT {{baseUrl}}/restaurants/2
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "statut": "OUVERT"
}

### Supprimer un restaurant (GERANT 2 supprime son restaurant ID 2)
DELETE {{baseUrl}}/restaurants/2
Authorization: Bearer {{gerant2Token}}


#######################
### PRODUITS
#######################

### Liste publique des produits
GET {{baseUrl}}/produits

### Obtenir un produit (ID 1)
GET {{baseUrl}}/produits/1

### Créer un produit (GERANT 1)
POST {{baseUrl}}/produits
Authorization: Bearer {{gerant1Token}}
Content-Type: application/json

{
  "nom": "Nuggets",
  "description": "Poulet croustillant",
  "prix": 4.00,
  "categorie": "ACCOMPAGNEMENT",
  "imageUrl": "https://example.com/nuggets.jpg",
  "allergenes": [],
  "tempsPreparation": 5,
  "restaurants": {
    "restaurants": [
      {
        "idRestaurant": 1,
        "prix": 4.00,
        "disponible": true,
        "stock": 50
      }
    ]
  }
}

### Créer un produit (CLIENT) => 403
POST {{baseUrl}}/produits
Authorization: Bearer {{client1Token}}
Content-Type: application/json

{
  "nom": "Nouvelle Boisson",
  "prix": 3.00,
  "categorie": "BOISSON",
  "tempsPreparation": 2,
  "restaurants": {
    "restaurants": [
      {
        "idRestaurant": 1,
        "prix": 3.00,
        "disponible": true,
        "stock": 100
      }
    ]
  }
}

### Mettre à jour un produit (ADMIN) => ex: ID 1
PUT {{baseUrl}}/produits/1
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "prix": 9.50,
  "description": "Burger de qualité, version plus chère"
}

### Supprimer un produit (GERANT 1) => ex: ID 3
DELETE {{baseUrl}}/produits/3
Authorization: Bearer {{gerant1Token}}


#######################
### MENUS
#######################

### Liste publique des menus
GET {{baseUrl}}/menus

### Obtenir un menu (ID 1)
GET {{baseUrl}}/menus/1

### Créer un menu (ADMIN)
POST {{baseUrl}}/menus
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "nom": "Menu Big Deluxe",
  "description": "Grand burger, frites, boisson",
  "prix": 13.99,
  "imageUrl": "https://example.com/menu-deluxe.jpg",
  "disponible": true,
  "composition": {
    "compositions": [
      {
        "categorie": "BURGER",
        "options": [
          {"idProduit": 1, "obligatoire": true}
        ]
      },
      {
        "categorie": "BOISSON",
        "options": [
          {"idProduit": 3, "obligatoire": true}
        ]
      }
    ]
  },
  "restaurants": {
    "restaurants": [
      {
        "idRestaurant": 1,
        "prix": 13.99,
        "disponible": true
      }
    ]
  }
}

### Créer un menu (GERANT 1)
POST {{baseUrl}}/menus
Authorization: Bearer {{gerant1Token}}
Content-Type: application/json

{
  "nom": "Menu Petit Gourmand",
  "description": "Petit burger + frites + boisson",
  "prix": 9.99,
  "imageUrl": "https://example.com/menu-petit.jpg",
  "disponible": true,
  "composition": {
    "compositions": [
      {
        "categorie": "BURGER",
        "options": [
          {"idProduit": 2, "obligatoire": true}
        ]
      },
      {
        "categorie": "ACCOMPAGNEMENT",
        "options": [
          {"idProduit": 4, "obligatoire": true}
        ]
      }
    ]
  },
  "restaurants": {
    "restaurants": [
      {
        "idRestaurant": 1,
        "prix": 9.99,
        "disponible": true
      }
    ]
  }
}

### Mettre à jour un menu (ADMIN) => ID 1
PUT {{baseUrl}}/menus/1
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "prix": 15.99,
  "disponible": false
}

### Supprimer un menu (GERANT 1) => ex: ID 2
DELETE {{baseUrl}}/menus/2
Authorization: Bearer {{gerant1Token}}


#######################
### COMMANDES
#######################

### Liste de toutes les commandes (ADMIN)
GET {{baseUrl}}/commandes
Authorization: Bearer {{adminToken}}

### Liste des commandes (GERANT 1) => accède seulement à celles de son restaurant
GET {{baseUrl}}/commandes
Authorization: Bearer {{gerant1Token}}

### Liste des commandes (EMPLOYE 1)
GET {{baseUrl}}/commandes
Authorization: Bearer {{employe1Token}}

### Liste des commandes (CLIENT 1)
GET {{baseUrl}}/commandes
Authorization: Bearer {{client1Token}}

### Obtenir une commande précise (ID 1) en tant qu'ADMIN
GET {{baseUrl}}/commandes/1
Authorization: Bearer {{adminToken}}

### Créer une commande en tant que CLIENT1 si la disponibilité n'a pas été changé par une précédente requête
POST {{baseUrl}}/commandes
Authorization: Bearer {{client1Token}}
Content-Type: application/json

{
  "idRestaurant": 1,
  "typeCommande": "SUR_PLACE",
  "codePromo": "REDUC10",
  "contenu": {
    "menus": [
      {
        "idMenu": 1,
        "quantite": 1
      }
    ],
    "produitsIndividuels": [
      {
        "idProduit": 1,
        "quantite": 2
      }
    ]
  }
}

### Créer une commande avec données manquantes => 400
POST {{baseUrl}}/commandes
Authorization: Bearer {{client1Token}}
Content-Type: application/json

{
  "idRestaurant": 1
}

### Mettre à jour le statut d'une commande (ADMIN -> EN_PREPARATION) => ex: ID 1
PATCH {{baseUrl}}/commandes/1/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "statut": "EN_PREPARATION"
}

### Mettre à jour le statut (EMPLOYE -> PRETE) => ex: ID 1
PATCH {{baseUrl}}/commandes/1/status
Authorization: Bearer {{employe1Token}}
Content-Type: application/json

{
  "statut": "PRETE"
}

### Mettre à jour avec un statut invalide => 400
PATCH {{baseUrl}}/commandes/1/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "statut": "STATUS_INCONNU"
}

### Annuler une commande par le CLIENT propriétaire => ID 1
POST {{baseUrl}}/commandes/1/cancel
Authorization: Bearer {{client1Token}}

### Annuler une commande déjà livrée => erreur 400 si son statut n'est pas EN_ATTENTE/EN_PREPARATION
POST {{baseUrl}}/commandes/2/cancel
Authorization: Bearer {{client2Token}}

### Obtenir une commande d'un autre client => 403
GET {{baseUrl}}/commandes/2
Authorization: Bearer {{client1Token}}